exit
@user.errors.full_messages
@user.errors
exit
params
user_params
@user
c
n
@user.sign_in_count
user_signed_in?
c
n
user_signed_in?
@user.sign_in_count
n
exit
@user.sign_in_count
user_signed_in?
user_signin?
@user
exit
@user.password.nil?
@user.password
@user
@user.persisted?
exit
flash[:alert]
falsh[:alert]
:alert
exit
:notice
:errors
flash[:errors]
exit
@user.errors.full_messages
@user.errors.messages
@user.errors
@user.errors[0]
@user.errors.last
@user.errors
@user
c
n
params
exit
params
c
exception
n
c
n
exception
n
c
n
exception
n
exit
params
exit
resource
c
exit
exception
n
exit
exception
n
exit
exception
n
exit
exception
n
item2
c
n
exit
exception
n
exit
find("#delete-button-286").click
find("#delete-button-286")
item2
item1
exit
params
c
n
exit
exception
n
exit
n
exit
exception
n
exit
n
c
exit
auth
auth.email
n
auth
n
c
n
c
exit
exception
n
return_user.email_required?
n
exit
exception
n
return_user.email_required?
n
c
n
exception
n
return_user.email_required?
n
exit
return_user.email_required?
return_user
n
exit
exception
n
exit
return_user.email_required?
return_user
n
exit
User.email_required?
n
exit
User.email_required?
auth.email.blank?
auth
n
exit
exception
n
exit
exception
n
exit
exception
n
exit
exception
exeption
n
exit
exception
n
exit
params
exit
params
exit
params
exit
auth
c
auth
c
n
auth
c
exit
provider
auth
n
c
auth
n
c
n
c
n
c
exit
user
user.id
user
self
user
n
auth
User.all
@user
n
@user
User.all
c
User.all
c
n
user
self.where(uid: auth.uid, provider: auth.provider, user_id: user.id).first
auth
return_user.authentications
return_user.autentications
return_user.autentication
return_user
n
return_user
n
exit
user
exception
n
User.where(email: auth.info.email).exists?
auth
n
c
exit
params
c
n
return_user
n
auth.uid
return_user
n
return_user
n
self.where(email: auth.info.email)
self
params
auth.provider
auth.uid
auth.name
auth
n
params
exit
user.profile
user
c
params
paramas
exit
@profile
user.profile
user
exit
@profile
exit
user.profile
